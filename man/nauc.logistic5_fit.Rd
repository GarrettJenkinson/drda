% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logistic5.R
\name{nauc.logistic5_fit}
\alias{nauc.logistic5_fit}
\alias{naac_logistic5_fit}
\title{5-parameter logistic fit}
\usage{
\method{nauc}{logistic5_fit}(object, lower_bound = -10, upper_bound = 10)

naac_logistic5_fit(object, lower_bound = -10, upper_bound = 10)
}
\arguments{
\item{object}{object of class \code{logistic5_fit}.}

\item{lower_bound}{numeric value with the lower bound of the integration
interval.}

\item{upper_bound}{numeric value with the upper bound of the integration
interval.}
}
\value{
Numeric value with the requested area.
}
\description{
Evaluate the normalized area under the curve (AUC) and area above the curve
(AAC).
}
\details{
The 5-parameter logistic function \verb{f(x; theta)} is defined in this package as

\code{alpha + omega / (1 + nu * exp(-eta * (x - phi)))^(1 / nu)}

where \code{theta = c(alpha, omega, eta, phi, nu)}.

The area under the curve (AUC) is simply the integral of \verb{f(x; theta)}
between \code{lower_bound} and \code{upper_bound} with respect to \code{x}.

When the interval of integration is fixed, since the the curve ranges between
\code{alpha} and \code{alpha + omega}, the curve \verb{f(x; theta)} is contained into the
rectangle of height \code{omega} and width \code{upper_bound - lower_bound}. The
maximum area the curve can have is obviously
\code{(upper_bound - lower_bound) * omega}.

We first shift the curve by \code{alpha} to set the minimum to 0. We then
integrate the curve and define the normalized AUC (NAUC) by dividing its
value by the maximum area. As a consequence, the normalized area above the
curve is simply \code{NAAC = 1 - NAUC}.

Default values of \code{lower_bound} and \code{upper_bound} were chosen based on common
dose ranges used in the literature. They are also symmetric around zero
so that \code{NAUC} and \code{NAAC} are equal to \code{0.5} in the standard logistic model.

\emph{Note}: Integral of a 5-parameter logistic function involves Gaussian
hypergeometric functions, which are prone to numerical errors and not part
of base R. For this reason, we opt here to simply use the \code{integrate}
function from base R.
}
