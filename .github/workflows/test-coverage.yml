# GitHub Actions modified from
# https://github.com/r-lib/actions/tree/master/examples#standard-ci-workflow

on:
  push:
    branches:
      - main
      - master
      - devel
  pull_request:
    branches:
      - main
      - master
      - devel

name: test-coverage

jobs:
  check:
    runs-on: ubuntu-20.04

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up r-release
        uses: r-lib/actions/setup-r@master
        with:
          r-version: release

      - name: Query dependencies
        run: |
          install.packages("remotes")
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran(c("covr", "rcmdcheck"))
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--ignore-vignettes"), build_args = "--no-build-vignettes", error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: ${{ failure() }}
        uses: actions/upload-artifact@master
        with:
          name: results
          path: check

      - name: Test coverage
        if: ${{ success() }}
        run: covr::codecov()
        shell: Rscript {0}
